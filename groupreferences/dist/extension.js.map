{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://groupreferences/./src/Tree.ts","webpack://groupreferences/./src/provider.ts","webpack://groupreferences/./src/referencesDocument.ts","webpack://groupreferences/external commonjs \"vscode\"","webpack://groupreferences/webpack/bootstrap","webpack://groupreferences/./src/extension.ts"],"sourcesContent":["import * as vscode from 'vscode';\r\n\r\nexport interface NodeInfo\r\n{\r\n    uri: vscode.Uri\r\n    name: string | vscode.TreeItemLabel,\r\n    isFile: boolean\r\n    line?: number\r\n    range?: vscode.Range\r\n}\r\n\r\nexport interface LocationSource\r\n{\r\n    loc: vscode.Location\r\n    lineText: string\r\n    isWrite?: boolean\r\n}\r\n\r\n// 树节点\r\nexport class NodeItem extends vscode.TreeItem\r\n{\r\n    info: NodeInfo\r\n\r\n    constructor(info: NodeInfo)\r\n    {\r\n        super(info.name, info.isFile ? vscode.TreeItemCollapsibleState.Expanded : vscode.TreeItemCollapsibleState.None)\r\n        this.info = info;\r\n\r\n        if (info.isFile == false)\r\n        {\r\n            const showDocOptions = {\r\n                preserveFocus: false,\r\n                preview: false,\r\n                // viewColumn: 1,\r\n\r\n                selection: info.range\r\n            };\r\n            this.command = {\r\n                command: \"vscode.open\", //命令id\r\n                title: \"标题\",\r\n                arguments: [info.uri, showDocOptions] //命令接收的参数\r\n            };\r\n        } else\r\n        {\r\n            this.iconPath = vscode.ThemeIcon.File;\r\n            this.resourceUri = info.uri;\r\n            this.description = info.uri.fsPath;\r\n            this.tooltip = info.uri.fsPath;\r\n        }\r\n    }\r\n}\r\n\r\n//树的内容组织管理\r\nexport class TreeProvider implements vscode.TreeDataProvider<NodeInfo>\r\n{\r\n\r\n\r\n    private refreshEvent: vscode.EventEmitter<NodeInfo | null | undefined> = new vscode.EventEmitter<NodeInfo | null | undefined>();\r\n\r\n    onDidChangeTreeData?: vscode.Event<void | NodeInfo | null | undefined> | undefined = this.refreshEvent.event;\r\n\r\n    public dataSources: LocationSource[] = []\r\n\r\n    private _isWriteTree: boolean = false;\r\n\r\n    constructor(isWrite: boolean)\r\n    {\r\n        this._isWriteTree = isWrite;\r\n    }\r\n\r\n    refresh()\r\n    {\r\n        this.refreshEvent?.fire(null);\r\n    }\r\n\r\n    getTreeItem(element: NodeInfo): vscode.TreeItem | Thenable<vscode.TreeItem>\r\n    {\r\n        let item = new NodeItem(element);\r\n        return item;\r\n    }\r\n    getChildren(nodeInfo?: NodeInfo): vscode.ProviderResult<NodeInfo[]>\r\n    {\r\n\r\n        if (this.dataSources.length == 0)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        if (nodeInfo)\r\n        {\r\n            if (nodeInfo.isFile == false)\r\n            {\r\n                return null\r\n            }\r\n            let children = [];\r\n            for (let index = 0; index < this.dataSources.length; index++)\r\n            {\r\n                let locSource = this.dataSources[index];\r\n                let loc = locSource.loc;\r\n                let uri = loc.uri;\r\n\r\n                if (this._isWriteTree)\r\n                {\r\n                    if (!locSource.isWrite)\r\n                    {\r\n                        continue;\r\n                    }\r\n                } else\r\n                {\r\n                    if (locSource.isWrite == true)\r\n                    {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (uri.toString() != nodeInfo.uri.toString())\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                //去掉前面的空格和tab\r\n                let originText = locSource.lineText;\r\n                locSource.lineText = locSource.lineText.trimStart();\r\n                let subLen = originText.length - locSource.lineText.length;\r\n\r\n                let treeItemLabel: vscode.TreeItemLabel = {\r\n                    label: locSource.lineText,\r\n                    highlights: [[loc.range.start.character - subLen, loc.range.end.character - subLen]]\r\n                }\r\n\r\n                let info: NodeInfo = {\r\n                    uri: uri,\r\n                    name: treeItemLabel,\r\n                    isFile: false,\r\n                    line: loc.range.start.line,\r\n                    range: loc.range\r\n                }\r\n                children.push(info);\r\n            }\r\n\r\n            children.sort((a, b) =>\r\n            {\r\n                a.line = a.line ? a.line : 0;\r\n                b.line = b.line ? b.line : 0;\r\n                return a.line - b.line;\r\n            })\r\n            return children;\r\n        } else\r\n        {\r\n            let children = [];\r\n            var fileSet = new Set<string>();\r\n            for (let index = 0; index < this.dataSources.length; index++)\r\n            {\r\n                let locSource = this.dataSources[index];\r\n                let loc = locSource.loc;\r\n                let uri = loc.uri;\r\n\r\n                if (this._isWriteTree)\r\n                {\r\n                    if (!locSource.isWrite)\r\n                    {\r\n                        continue;\r\n                    }\r\n                } else\r\n                {\r\n                    if (locSource.isWrite == true)\r\n                    {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (fileSet.has(uri.toString()))\r\n                {\r\n                    continue;\r\n                }\r\n                let info: NodeInfo = {\r\n                    uri: uri,\r\n                    name: this.getFileNameByPath(uri.path),\r\n                    isFile: true\r\n                }\r\n\r\n                fileSet.add(uri.toString());\r\n\r\n                children.push(info);\r\n            }\r\n            return children;\r\n        }\r\n    }\r\n\r\n    public setDataSources(dataSources: LocationSource[])\r\n    {\r\n        this.dataSources = dataSources;\r\n        this.refresh();\r\n    }\r\n\r\n\r\n    getFileNameByPath(path: string)\r\n    {\r\n        let index = path.lastIndexOf(\"\\\\\");\r\n        if (index == -1)\r\n        {\r\n            index = path.lastIndexOf(\"/\");\r\n        }\r\n        if (index != -1)\r\n        {\r\n            return path.substring(index + 1);\r\n        }\r\n        return path;\r\n    }\r\n\r\n}\r\n","\r\n// var vscode = require('vscode');\r\n// var referencesDocument_1 = require('./referencesDocument');\r\nimport * as vscode from 'vscode';\r\nimport { ReferencesDocument } from './referencesDocument';\r\n\r\nexport class Provider implements vscode.TextDocumentContentProvider, vscode.DocumentLinkProvider\r\n{\r\n    static scheme = 'references';\r\n\r\n    _onDidChange: vscode.EventEmitter<vscode.Uri>;\r\n    _documents: Map<string, ReferencesDocument>;\r\n    _editorDecoration: vscode.TextEditorDecorationType;\r\n    _subscriptions: vscode.Disposable;\r\n\r\n    constructor()\r\n    {\r\n        var _this = this;\r\n        this._onDidChange = new vscode.EventEmitter<vscode.Uri>();\r\n        this._documents = new Map<string, ReferencesDocument>();\r\n        this._editorDecoration = vscode.window.createTextEditorDecorationType({ textDecoration: 'underline' });\r\n        // Listen to the following events:\r\n        // * closeTextDocument - which means we must clear the corresponding model object - `ReferencesDocument`\r\n        this._subscriptions = vscode.workspace.onDidCloseTextDocument(function (doc) { return _this._documents.delete(doc.uri.toString()); });\r\n    }\r\n    dispose()\r\n    {\r\n        this._subscriptions.dispose();\r\n        this._documents.clear();\r\n        this._editorDecoration.dispose();\r\n        this._onDidChange.dispose();\r\n    }\r\n\r\n    /**\r\n         * Expose an event to signal changes of _virtual_ documents\r\n         * to the editor\r\n         */\r\n    get onDidChange()\r\n    {\r\n        return this._onDidChange.event;\r\n    }\r\n\r\n    /**\r\n     * Provider method that takes an uri of the `references`-scheme and\r\n     * resolves its content by (1) running the reference search command\r\n     * and (2) formatting the results\r\n     */\r\n    provideTextDocumentContent(uri: vscode.Uri)\r\n    {\r\n        var _this = this;\r\n        // already loaded?\r\n        var document = this._documents.get(uri.toString());\r\n        if (document)\r\n        {\r\n            return document.value;\r\n        }\r\n        // Decode target-uri and target-position from the provided uri and execute the\r\n        // `reference provider` command (http://code.visualstudio.com/docs/extensionAPI/vscode-api-commands).\r\n        // From the result create a references document which is in charge of loading,\r\n        // printing, and formatting references\r\n        var _a = decodeLocation(uri), target = _a[0], pos = _a[1];\r\n        return vscode.commands.executeCommand('vscode.executeReferenceProvider', target, pos).then((locationList) =>\r\n        {\r\n            // sort by locations and shuffle to begin from target resource\r\n            var locations = locationList as vscode.Location[]\r\n            var idx = 0;\r\n            locations.sort(Provider._compareLocations).find(function (loc, i) { return loc.uri.toString() === target.toString() && (idx = i) && true; });\r\n            locations.push.apply(locations, locations.splice(0, idx));\r\n            // create document and return its early state\r\n            var document = new ReferencesDocument(uri, locations, _this._onDidChange);\r\n            _this._documents.set(uri.toString(), document);\r\n            return document.value;\r\n        });\r\n    }\r\n    static _compareLocations(a: any, b: any)\r\n    {\r\n        if (a.uri.toString() < b.uri.toString())\r\n        {\r\n            return -1;\r\n        }\r\n        else if (a.uri.toString() > b.uri.toString())\r\n        {\r\n            return 1;\r\n        }\r\n        else\r\n        {\r\n            return a.range.start.compareTo(b.range.start);\r\n        }\r\n    }\r\n    provideDocumentLinks(document: any, token: any)\r\n    {\r\n        // While building the virtual document we have already created the links.\r\n        // Those are composed from the range inside the document and a target uri\r\n        // to which they point\r\n        var doc = this._documents.get(document.uri.toString());\r\n        if (doc)\r\n        {\r\n            return doc.links;\r\n        }\r\n    }\r\n}\r\n// var Provider = (function ()\r\n// {\r\n\r\n//     return Provider;\r\n// }());\r\n// exports.default = Provider;\r\nvar seq = 0;\r\nexport function encodeLocation(uri: any, pos: any)\r\n{\r\n    var query = JSON.stringify([uri.toString(), pos.line, pos.character]);\r\n    return vscode.Uri.parse(Provider.scheme + \":References.locations?\" + query + \"#\" + seq++);\r\n}\r\nexport function decodeLocation(uri: any)\r\n{\r\n    var _a = JSON.parse(uri.query), target = _a[0], line = _a[1], character = _a[2];\r\n    return [vscode.Uri.parse(target), new vscode.Position(line, character)];\r\n}","/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nimport * as vscode from 'vscode';\r\nexport class ReferencesDocument\r\n{\r\n    private _uri: vscode.Uri\r\n    private _locations: vscode.Location[]\r\n    // The ReferencesDocument has access to the event emitter from\r\n    // the containg provider. This allows it to signal changes\r\n    private _emitter: vscode.EventEmitter<vscode.Uri>\r\n    // Start with printing a header and start resolving\r\n    private _lines\r\n    private _links: any[]\r\n    private _join\r\n\r\n    constructor(uri: vscode.Uri, locations: vscode.Location[], emitter: vscode.EventEmitter<vscode.Uri>)\r\n    {\r\n        this._uri = uri;\r\n        this._locations = locations;\r\n        // The ReferencesDocument has access to the event emitter from\r\n        // the containg provider. This allows it to signal changes\r\n        this._emitter = emitter;\r\n        // Start with printing a header and start resolving\r\n        this._lines = [(\"Found \" + this._locations.length + \" references\")];\r\n        this._links = [];\r\n        this._join = this._populate();\r\n    }\r\n\r\n    get value(): string\r\n    {\r\n        return this._lines.join('\\n');\r\n    }\r\n\r\n\r\n\r\n    get links()\r\n    {\r\n        return this._links;\r\n    }\r\n\r\n    join()\r\n    {\r\n        return this._join;\r\n    }\r\n    _populate()\r\n    {\r\n        var _this = this;\r\n        if (this._locations.length === 0)\r\n        {\r\n            return;\r\n        }\r\n        // fetch one by one, update doc asap\r\n        return new Promise(function (resolve)\r\n        {\r\n            var index = 0;\r\n            var next = function ()\r\n            {\r\n                // We have seen all groups\r\n                if (index >= _this._locations.length)\r\n                {\r\n                    resolve(_this);\r\n                    return;\r\n                }\r\n                // We know that this._locations is sorted by uri\r\n                // such that we can now iterate and collect ranges\r\n                // until the uri changes\r\n                var loc = _this._locations[index];\r\n                var uri = loc.uri;\r\n                var ranges = [loc.range];\r\n                while (++index < _this._locations.length)\r\n                {\r\n                    loc = _this._locations[index];\r\n                    if (loc.uri.toString() !== uri.toString())\r\n                    {\r\n                        break;\r\n                    }\r\n                    else\r\n                    {\r\n                        ranges.push(loc.range);\r\n                    }\r\n                }\r\n                // We have all ranges of a resource so that it be\r\n                // now loaded and formatted\r\n                _this._fetchAndFormatLocations(uri, ranges).then(function (lines)\r\n                {\r\n                    _this._emitter.fire(_this._uri);\r\n                    next();\r\n                });\r\n            };\r\n            next();\r\n        });\r\n    }\r\n    _fetchAndFormatLocations(uri: any, ranges: any)\r\n    {\r\n        var _this = this;\r\n        // Fetch the document denoted by the uri and format the matches\r\n        // with leading and trailing content form the document. Make sure\r\n        // to not duplicate lines\r\n        return vscode.workspace.openTextDocument(uri).then(function (doc)\r\n        {\r\n            _this._lines.push('', uri.toString());\r\n            for (var i = 0; i < ranges.length; i++)\r\n            {\r\n                var line = ranges[i].start.line;\r\n                _this._appendLeading(doc, line, ranges[i - 1]);\r\n                _this._appendMatch(doc, line, ranges[i], uri);\r\n                _this._appendTrailing(doc, line, ranges[i + 1]);\r\n            }\r\n        }, function (err)\r\n        {\r\n            _this._lines.push('', \"Failed to load '\" + uri.toString() + \"'\\n\\n\" + String(err), '');\r\n        });\r\n    }\r\n    _appendLeading(doc: any, line: any, previous: any)\r\n    {\r\n        var from = Math.max(0, line - 3, previous && previous.end.line || 0);\r\n        while (++from < line)\r\n        {\r\n            var text = doc.lineAt(from).text;\r\n            this._lines.push((\"  \" + (from + 1)) + (text && \"  \" + text));\r\n        }\r\n    }\r\n    _appendMatch(doc: any, line: number, match: vscode.Range, target: vscode.Uri)\r\n    {\r\n        var text = doc.lineAt(line).text;\r\n        var preamble = \"  \" + (line + 1) + \": \";\r\n        // Append line, use new length of lines-array as line number\r\n        // for a link that point to the reference\r\n        var len = this._lines.push(preamble + text);\r\n        // Create a document link that will reveal the reference\r\n        var linkRange = new vscode.Range(len - 1, preamble.length + match.start.character, len - 1, preamble.length + match.end.character);\r\n        var linkTarget = target.with({ fragment: String(1 + match.start.line) });\r\n        this._links.push(new vscode.DocumentLink(linkRange, linkTarget));\r\n    }\r\n    _appendTrailing(doc: any, line: any, next: any)\r\n    {\r\n        var to = Math.min(doc.lineCount, line + 3);\r\n        if (next && next.start.line - to <= 2)\r\n        {\r\n            return; // next is too close, _appendLeading does the work\r\n        }\r\n        while (++line < to)\r\n        {\r\n            var text = doc.lineAt(line).text;\r\n            this._lines.push((\"  \" + (line + 1)) + (text && \"  \" + text));\r\n        }\r\n        if (next)\r\n        {\r\n            this._lines.push(\"  ...\");\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=referencesDocument.js.map","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport * as sidebar from './Tree';\nimport { decodeLocation, encodeLocation } from './provider';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext)\n{\n\n\tconsole.log('Congratulations, your extension \"groupreferences\" is now active!');\n\n\t//注册侧边栏面板的实现\n\tconst readDataProvider = new sidebar.TreeProvider(false);\n\tvscode.window.registerTreeDataProvider(\"sidebar_groupreferences_id1\", readDataProvider);\n\n\tconst writeDataProvider = new sidebar.TreeProvider(true);\n\tvscode.window.registerTreeDataProvider(\"sidebar_groupreferences_id2\", writeDataProvider);\n\n\n\t// //注册命令 \n\tvar commandRegistration = vscode.commands.registerTextEditorCommand('groupreferences.findAllReferences', function (editor: vscode.TextEditor)\n\t{\n\t\tvar uri = encodeLocation(editor.document.uri, editor.selection.active);\n\t\tvar _a = decodeLocation(uri), target = _a[0], pos = _a[1];\n\n\t\tvscode.commands.executeCommand('workbench.view.extension.sidebar_groupreferences');\n\n\t\treturn vscode.commands.executeCommand('vscode.executeReferenceProvider', target, pos).then((locationList) =>\n\t\t{\n\t\t\t// sort by locations and shuffle to begin from target resource\n\t\t\tvar locations = locationList as vscode.Location[];\n\t\t\t// var idx = 0;\n\t\t\t// locations.sort(Provider._compareLocations).find(function (loc, i) { return loc.uri.toString() === target.toString() && (idx = i) && true; });\n\t\t\t// locations.push.apply(locations, locations.splice(0, idx));\n\n\n\t\t\tlet dataSources = genDataSource(locations);\n\t\t\tprocessDataSources(dataSources).then(() =>\n\t\t\t{\n\t\t\t\treadDataProvider.setDataSources(dataSources);\n\t\t\t\twriteDataProvider.setDataSources(dataSources);\n\t\t\t})\n\t\t});\n\t});\n\n\tcontext.subscriptions.push(commandRegistration);\n\n}\n\nfunction genDataSource(locations: vscode.Location[]): sidebar.LocationSource[]\n{\n\tlet dataSources: sidebar.LocationSource[] = [];\n\tfor (let index = 0; index < locations.length; index++)\n\t{\n\t\tconst loc = locations[index];\n\t\tconst locSource: sidebar.LocationSource = {\n\t\t\tloc: loc,\n\t\t\tlineText: \"\"\n\t\t};\n\t\tdataSources.push(locSource);\n\t}\n\treturn dataSources;\n}\n\nfunction processDataSources(dataSources: sidebar.LocationSource[])\n{\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tlet processCount = 0;\n\t\tfor (let index = 0; index < dataSources.length; index++)\n\t\t{\n\t\t\tlet locSource = dataSources[index];\n\t\t\tlet loc = locSource.loc;\n\t\t\tlet uri = loc.uri;\n\t\t\tlocSource.isWrite = false;\n\n\t\t\tvscode.workspace.openTextDocument(uri).then((doc: vscode.TextDocument) =>\n\t\t\t{\n\t\t\t\tlocSource.lineText = doc.lineAt(loc.range.start.line).text;\n\n\t\t\t\t//判断是不是import\n\t\t\t\tif (locSource.lineText.startsWith(\"import \"))\n\t\t\t\t{\n\t\t\t\t\tlocSource.isWrite = false;\n\n\t\t\t\t\tprocessCount++;\n\n\t\t\t\t\tif (processCount >= dataSources.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve && resolve(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvscode.commands.executeCommand('vscode.executeDocumentHighlights', uri, loc.range.start).then((args: any) =>\n\t\t\t\t{\n\t\t\t\t\tlet documentHighlight: vscode.DocumentHighlight[] = args;\n\n\t\t\t\t\tfor (let I = 0; I < documentHighlight.length; I++)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst element = documentHighlight[I];\n\t\t\t\t\t\tif (loc.range.isEqual(element.range))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (element.kind === vscode.DocumentHighlightKind.Write)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocSource.isWrite = true;\n\t\t\t\t\t\t\t} else if (element.kind === vscode.DocumentHighlightKind.Read)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocSource.isWrite = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprocessCount++;\n\n\t\t\t\t\tif (processCount >= dataSources.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve && resolve(null);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() { }\n"],"names":["NodeItem","vscode","TreeItem","constructor","info","super","name","isFile","TreeItemCollapsibleState","Expanded","None","this","showDocOptions","preserveFocus","preview","selection","range","command","title","arguments","uri","iconPath","ThemeIcon","File","resourceUri","description","fsPath","tooltip","isWrite","refreshEvent","EventEmitter","onDidChangeTreeData","event","dataSources","_isWriteTree","refresh","fire","getTreeItem","element","getChildren","nodeInfo","length","children","index","locSource","loc","toString","originText","lineText","trimStart","subLen","label","highlights","start","character","end","line","push","sort","a","b","fileSet","Set","has","getFileNameByPath","path","add","setDataSources","lastIndexOf","substring","Provider","_this","_onDidChange","_documents","Map","_editorDecoration","window","createTextEditorDecorationType","textDecoration","_subscriptions","workspace","onDidCloseTextDocument","doc","delete","dispose","clear","onDidChange","provideTextDocumentContent","document","get","value","_a","decodeLocation","target","pos","commands","executeCommand","then","locationList","locations","idx","_compareLocations","find","i","apply","splice","ReferencesDocument","set","static","compareTo","provideDocumentLinks","token","links","scheme","seq","JSON","parse","query","Uri","Position","stringify","emitter","_uri","_locations","_emitter","_lines","_links","_join","_populate","join","Promise","resolve","next","ranges","_fetchAndFormatLocations","lines","openTextDocument","_appendLeading","_appendMatch","_appendTrailing","err","String","previous","from","Math","max","text","lineAt","match","preamble","len","linkRange","Range","linkTarget","with","fragment","DocumentLink","to","min","lineCount","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","console","log","readDataProvider","sidebar","TreeProvider","registerTreeDataProvider","writeDataProvider","commandRegistration","registerTextEditorCommand","editor","encodeLocation","active","genDataSource","reject","processCount","startsWith","args","documentHighlight","I","isEqual","kind","DocumentHighlightKind","Write","Read","processDataSources","subscriptions"],"sourceRoot":""}